; Welcome to tutorial # 7 - BLIT'ing and bitmapped text

#title "tutorial 7"

; In this tutorial you will learn about using your own font, creating a
; subroutine to display dynamic text in a bitmapped (3 or 5) mode and using
; the SELECT/CASE statements.

; When done, we'll see one of the greatest 70's bands on the screen in mode
; 3 :)

; First, as always, let's include our API.

#include <gba.dbc>

; One by one, import 8x8, 16-bit graphics.

CH_A: #bitmap "A.png"
CH_B: #bitmap "B.png"

; We create our function to BLIT dynamic text anywhere on the screen in a
; bitmapped mode.

sub BLIT_Text(str$,x,y)
	local i

	; Now we will loop through every character

	for i = 0 to len(str$) - 1

		; Next we'll use the SELECT/CASE statement to determine what
		; character we want to display.
		
		; Using SELECT/CASE is just like an IF statement, only you
		; can compare against multiple values instead of using
		; IF/ELSE/IF/ELSE, etc.
		
		; We can use the MID$() function to get the I'th character
		; in the string, and we convert it to a number (its ASCII
		; code) using ASC().

		; SELECT statements begin with SELECT <expression>

		select asc(mid$(str$, i, 1))
		
		; Inside a select statement, we use CASE statements to
		; compare our expression against another expression.  Here
		; we will be comparing with the ASCII values of characters.

		case 65 ; A

			; Now that we know what character is to be
			; displayed, we can use the BLIT function to
			; actually display it.

			; BLIT takes 6 parameters. First is our screen
			; buffer address, followed by the address where our
			; graphic is located.  Next is the (x,y) coordinates
			; that we want to BLIT to, and last is the width and
			; height (in pixels) of our graphic.

			blit CH_A,x,y,8,8

		case 66 ; B

			; Just like for "A", except now we'll blit "B".

			blit CH_B,x,y,8,8

			; All select statements end with END SELECT.

		end select

		; Increment the "position" we will draw to.

		x = x + 8

		; Handle screen wrap around.  A mode 3 screen is 240 pixels
		; wide.

		if x >= 240
			y = y + 8	; go to next line
			x = 0
		end if
	next
end sub

; Start the program here

start:

	; Set the graphics mode to 3
	
	graphics 3,false

	; Now we will call the function we made with
	; our text string (a pointer to it) and the (x,y)
	; coordinates we want to render to.
	
	BLIT_Text "ABBA",30,24
